.form-control {
  display: block;
  width: 100%;
  font-weight: $input-font-weight;
  line-height: $input-line-height;
  background-clip: padding-box;
  appearance: none;
  @include padding($input-padding-y $input-padding-x);
  @include fontSize($input-font-size);
  @include color($input-color);
  @include backgroundColor($input-bg);
  @include border($input-border-width solid $input-border-color);
  @include border-radius($input-border-radius, 0);
  @include transition($input-transition);

  &:focus {
    outline: 0;
    @include color($input-focus-color);
    @include backgroundColor($input-focus-bg);
    @include borderColor($input-focus-border-color);
    @include box-shadow($input-focus-box-shadow);

    ~ .icon-wrapper {
      @include color($input-focus-border-color);
    }
  }

  &::placeholder {
    @include color($input-placeholder-color);
    opacity: 1;
  }

  &:disabled,
  &[readonly],
  &.disabled,
  &.readonly {
    opacity: 1;
    @include backgroundColor($input-disabled-bg);
    @include borderColor($input-disabled-border-color);
  }

  &.disabled,
  &.readonly {
    pointer-events: none;
  }

  &.floating-input {
    @include padding($floating-input-padding-y $floating-input-padding-x);

    &:focus ~ .floating-label {
      @include color($input-focus-border-color);
    }
  }
}

.form-label {
  @include fontSize($form-label-font-size);
  font-weight: $form-label-font-weight;

  &.floating-label {
    position: absolute;
    left: calculateRem(4px);
    top: 0;
    line-height: $input-line-height;
    @include backgroundColor($floating-form-label-bg);
    @include padding(0 $floating-input-padding-x);
    @include translateY($floating-form-label-initial-position);
    @include transition($floating-form-label-transition);
    @include transform-origin(0 100%);
  }
}

.form-group {
  &.has-icons {
    position: relative;

    .icon-wrapper {
      position: absolute;
      top: 0;
      height: calculateRem($form-group-icon-height);
      width: calculateRem($form-group-icon-width);
      display: flex;
      align-items: center;
      justify-content: center;
    }

    &.icon-left {
      .form-control {
        @include padding-left($form-group-icon-width);
      }
      .icon-wrapper {
        left: 0;
      }
    }
    &.icon-right {
      .form-control {
        @include padding-right($form-group-icon-width);
      }
      .icon-wrapper {
        right: 0;
      }
    }
  }

  &.floating-label-group {
    position: relative;

    &.active {
      .floating-label {
        @include transform(
          translateY(calculateRem(-$floating-form-label-initial-position))
            scale(0.8)
        );
        @include transform-origin(0 0);
      }
    }
  }

  &.has-error {
    .form-label,
    .invalid-feedback {
      @include color($input-error-color);
    }

    .form-control {
      @include borderColor($input-error-color);

      &.floating-input {
        &:focus ~ .floating-label {
          @include color($input-error-color);
        }
      }

      &:focus {
        @include box-shadow($input-error-focus-box-shadow);

        ~ .icon-wrapper {
          @include color($input-error-color);
        }
      }
    }

    .invalid-feedback {
      @include fontSize($invalid-feedback-font-size);
    }
  }
}
